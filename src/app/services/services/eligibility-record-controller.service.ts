/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { EligibilityRecord } from '../models/eligibility-record';
import { getAllEligibilityRecords } from '../fn/eligibility-record-controller/get-all-eligibility-records';
import { GetAllEligibilityRecords$Params } from '../fn/eligibility-record-controller/get-all-eligibility-records';
import { getEligibilityRecordsForUser } from '../fn/eligibility-record-controller/get-eligibility-records-for-user';
import { GetEligibilityRecordsForUser$Params } from '../fn/eligibility-record-controller/get-eligibility-records-for-user';

@Injectable({ providedIn: 'root' })
export class EligibilityRecordControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getEligibilityRecordsForUser()` */
  static readonly GetEligibilityRecordsForUserPath = '/auth/eligibilityRecords/my-eligibility-records';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getEligibilityRecordsForUser()` instead.
   *
   * This method doesn't expect any request body.
   */
  getEligibilityRecordsForUser$Response(params?: GetEligibilityRecordsForUser$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<EligibilityRecord>>> {
    return getEligibilityRecordsForUser(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getEligibilityRecordsForUser$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getEligibilityRecordsForUser(params?: GetEligibilityRecordsForUser$Params, context?: HttpContext): Observable<Array<EligibilityRecord>> {
    return this.getEligibilityRecordsForUser$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<EligibilityRecord>>): Array<EligibilityRecord> => r.body)
    );
  }

  /** Path part for operation `getAllEligibilityRecords()` */
  static readonly GetAllEligibilityRecordsPath = '/auth/eligibilityRecords/all';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllEligibilityRecords()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllEligibilityRecords$Response(params?: GetAllEligibilityRecords$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<EligibilityRecord>>> {
    return getAllEligibilityRecords(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllEligibilityRecords$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllEligibilityRecords(params?: GetAllEligibilityRecords$Params, context?: HttpContext): Observable<Array<EligibilityRecord>> {
    return this.getAllEligibilityRecords$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<EligibilityRecord>>): Array<EligibilityRecord> => r.body)
    );
  }

}
